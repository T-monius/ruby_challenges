# house_notes.txt

Understanding:
  - `House` class in application file
    + private method `House#pieces`
      > Returns the nested array of rhyme components.
    + `House::recite`
      > Returns the rhyme as a string or heredoc
      > Must instantiate an instance of `House` to access the
        private method `House#pieces`
  - Input
    + Array
      > Nested
      > Each inner array has two strings
      > The first verse if the last array element
      > When introduced, the character is simply referenced
        = inner_arr[0]
      > When acting, the action is prepended to the character
        = inner_arr[1]
        = The action pertains to the previous inner_arr[1]
  - Task
    + A verse consists of the starting verse (inner_arr[-x]) to
      the end
    + Build the verse from that point forward to the end or
      from the end to the front
    + A complete verse is added to the whole rhyme
  - Output
    + Nursery Rhyme
      > A new character is introduced with 'This is the...'
      > The subseqent lines all begin with 'that'
      > Each verse is one line longer than the previous
      > A new buffer line (between the opening and closing) is
        formed by taking the opening character from the previous verse, prepending that, then a new action
    + String formatted by a heredoc (per test suite)
      > A String stored in the same format as a heredoc
        are not necessarily compared as equal
      > Can interpolate into a heredoc
      > File: literals.rdoc

Approach
  - Method for building a verse
    + (1) Iterate from idx -1 to x to build a verse
      > Add the 1 index of the next array to the 0 index of the
        current
    + (2) Iterate with reverse each
      > Break if idx + 1 == num
    + (3) Build the entire longest verse in an array of strings
      of each line
      > Return each subverse based on portions of the longest
  - * I have the ability to build a verse now *
    + Just need to know how to return it
    + Array of verses
    + String separated by newlines?
  - Instance variable for the whole rhyme
  - `House#build_poem` to build the whole rhyme
    + Iterate to build as many verses as there are inner
      arrays
    + Either push the verses to an array of verses or a string
    + Separated by "/n/n"?

Refactor
  - `House#build_verse`
    + Transformation
      > Nested arrays of strings => array of strings
    + Iterating from a negative index
      > Reverse_each
        = The given index will be one off and need to be
          adjusted
      > .with_object?
      > map.with_index
        = Can use this but then adjust the index in order to
          access the proper line of the array
        = .with_index comes with an offset
  * Attempted refactor
  def build_verse(num)
    pieces_array = pieces
    verse = []
    pieces_array.reverse_each do |current_array, idx|
      idx = -(idx + 1)
      next_array = pieces_array[idx -1]
      line = "#{next_array[1]} #{current_array[0]}"
      line << '.' if idx == -1
      verse.unshift(line)
    end

    first_line = STARTING_PHRASE.clone + pieces_array[idx][0]
    first_line << '.' if idx == -1
    verse.unshift(first_line).join("\n")
  end
